#include <stdio.h>
#include <math.h>
int main()
{
    int n;
    scanf("%d", &n);
    for(int t=0;t<n;t++){
        int x, y;
        scanf("%d %d", &x, &y);
        int dist=y-x;
        int ans=0;
        int guess = sqrt(dist);///猜的數字, 會是正確答案的1半
        for(int i=guess*2-2; i<=guess*2+2; i++){
            if(i%2==0){///even
                int now=(1+(i/2)) * (i/2);/// (1+(n/2))  *  (n/2)
                if(now>=dist) {ans=i; break;}
            }else{///odd
                int now= ((i+1)/2) * ((i+1)/2);///平方
                if(now>=dist) {ans=i; break;}
            }
        }
        printf("%d\n", ans);
    }
}
/// 45   48
/// 45 46 47 48
///   ^  ^  ^   3 steps
/// 45 46 47 48 49 (4格
///   1    2   1
///解釋: 最前面1步,最後面1步, 中間亂走(與前後步數,只能差+1,0,-1步)
/// 45-50 有 5格 (1,2,1,1) : 可能要用Dynamic Programming (DP) 或 greedy
/// x<=y (32bit integer)
/// 0步:0
/// 1步:1 (1)
/// 2步:2 (1 1)
/// 3步:3,4 (1 1 1) (1 2 1)
/// 4步:4,5,6 (1 1 1 1) (1 1 2 1) (1 2 2 1)
/// 5步:5,6,7,8,9 (1 1 1 1 1) (1 1 1 2 1) (1 1 2 2 1) (1 2 2 2 1) (1 2 3 2 1)
/// 6步:6,7,8,9,10,11,12 (1 1 1 1 1 1) (1 1 1 1 2 1) (1 1 1 2 2 1) (1 1 2 2 2 1) (1 1 2 3 2 1) (1 2 2 3 2 1) (1 2 3 3 2 1)
/// 7步:7,8,9,10,11,12... 16 (1 1 1 1 1 1) (1 1 1 1 2 1) (1 1 1 2 2 1) (1 1 2 2 2 1) (1 1 2 3 2 1) (1 2 2 3 2 1) (1 2 3 3 2 1) (1 2 3 4 3 2 1)
/*0 1 2 4 6 9 12
^^^^^^^^^^^^^^  16
1     4     9    16    25
   2     6     12   20
()
(1)
(1 1)
(1 2 1)
(1 2 2 1)
(1 2 3 2 1)
(1 2 3 3 2 1)
(1 2 3 4 3 2 1) 7步,odd, 7/2
 1 2 3 4
 3 2 1    => 4*4=16 (7/2=3.5 => 4)

 even: 8步 1 2 3 4 4 3 2 1 ( sum(1...(n/2))*2  )
 ans: (1+(n/2))  *  (n/2) /2 *2
*/
